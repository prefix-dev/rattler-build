---
source: crates/rattler_build_recipe/src/stage0/parser/snapshot_tests.rs
expression: recipe
---
Stage0Recipe {
    schema_version: None,
    context: {},
    package: Package {
        name: Concrete(
            PackageName(
                PackageName {
                    normalized: None,
                    source: "library-with-exports",
                },
            ),
        ),
        version: Concrete(
            VersionWithSource {
                version: Version {
                    version: [[0], [3], [2], [1]],
                    local: [],
                },
                source: Some(
                    "3.2.1",
                ),
            },
        ),
    },
    build: Build {
        number: Concrete(
            0,
        ),
        string: None,
        script: ConditionalList(
            [],
        ),
        noarch: None,
        python: PythonBuild {
            entry_points: ConditionalList(
                [],
            ),
            skip_pyc_compilation: ConditionalList(
                [],
            ),
            use_python_app_entrypoint: false,
            version_independent: false,
            site_packages_path: None,
        },
        skip: ConditionalList(
            [],
        ),
        always_copy_files: ConditionalList(
            [],
        ),
        always_include_files: ConditionalList(
            [],
        ),
        merge_build_and_host_envs: false,
        files: List(
            ConditionalList(
                [],
            ),
        ),
        dynamic_linking: DynamicLinking {
            rpaths: ConditionalList(
                [],
            ),
            binary_relocation: Boolean(
                Concrete(
                    true,
                ),
            ),
            missing_dso_allowlist: ConditionalList(
                [],
            ),
            rpath_allowlist: ConditionalList(
                [],
            ),
            overdepending_behavior: None,
            overlinking_behavior: None,
        },
        variant: VariantKeyUsage {
            use_keys: ConditionalList(
                [],
            ),
            ignore_keys: ConditionalList(
                [],
            ),
            down_prioritize_variant: None,
        },
        prefix_detection: PrefixDetection {
            force_file_type: ForceFileType {
                text: ConditionalList(
                    [],
                ),
                binary: ConditionalList(
                    [],
                ),
            },
            ignore: Boolean(
                Concrete(
                    false,
                ),
            ),
            ignore_binary_files: false,
        },
        post_process: [],
    },
    requirements: Requirements {
        build: ConditionalList(
            [
                Value(Concrete("gcc")),
            ],
        ),
        host: ConditionalList(
            [
                Value(Concrete("python")),
            ],
        ),
        run: ConditionalList(
            [
                Value(Concrete("python")),
            ],
        ),
        run_constraints: ConditionalList(
            [],
        ),
        run_exports: RunExports {
            noarch: ConditionalList(
                [
                    Value(Concrete("library-with-exports-noarch")),
                ],
            ),
            strong: ConditionalList(
                [
                    Value(Concrete("library-with-exports")),
                    Value(Concrete("libfoo >=1.0")),
                ],
            ),
            strong_constraints: ConditionalList(
                [
                    Value(Concrete("libbar <2.0")),
                ],
            ),
            weak: ConditionalList(
                [
                    Value(Concrete("optional-dep")),
                ],
            ),
            weak_constraints: ConditionalList(
                [
                    Value(Concrete("another-optional <3.0")),
                ],
            ),
        },
        ignore_run_exports: IgnoreRunExports {
            by_name: ConditionalList(
                [
                    Value(Concrete("ignored-lib")),
                    Value(Concrete("another-ignored")),
                ],
            ),
            from_package: ConditionalList(
                [
                    Value(Concrete("problematic-package")),
                ],
            ),
        },
    },
    about: About {
        homepage: Some(
            Concrete(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "example.com",
                        ),
                    ),
                    port: None,
                    path: "/",
                    query: None,
                    fragment: None,
                },
            ),
        ),
        license: Some(
            Concrete(
                License(
                    BSD-3-Clause,
                ),
            ),
        ),
        license_file: ConditionalList(
            [],
        ),
        license_family: None,
        summary: Some(
            Concrete(
                "Library that exports dependencies",
            ),
        ),
        description: None,
        documentation: None,
        repository: None,
    },
    extra: Extra {
        recipe_maintainers: ConditionalList(
            [
                Value(Concrete("maintainer")),
            ],
        ),
    },
    source: [],
    tests: [],
}
