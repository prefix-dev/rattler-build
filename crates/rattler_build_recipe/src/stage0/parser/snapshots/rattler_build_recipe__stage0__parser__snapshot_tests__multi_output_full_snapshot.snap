---
source: crates/rattler_build_recipe/src/stage0/parser/snapshot_tests.rs
expression: recipe
---
MultiOutput(
    MultiOutputRecipe {
        schema_version: Some(
            1,
        ),
        context: {
            "version": Concrete {
                value: "2.5.0",
                span: Span {
                    start: 102,
                    end: 102,
                    start_line: 5,
                    start_column: 12,
                    end_line: 5,
                    end_column: 12,
                },
            },
            "build_number": Concrete {
                value: "0",
                span: Span {
                    start: 126,
                    end: 126,
                    start_line: 6,
                    start_column: 17,
                    end_line: 6,
                    end_column: 17,
                },
            },
        },
        recipe: RecipeMetadata {
            name: Some(
                Concrete {
                    value: PackageName(
                        PackageName {
                            normalized: None,
                            source: "complex-project",
                        },
                    ),
                    span: Span {
                        start: 147,
                        end: 147,
                        start_line: 9,
                        start_column: 9,
                        end_line: 9,
                        end_column: 9,
                    },
                },
            ),
            version: Some(
                Template {
                    template: JinjaTemplate {
                        source: "${{ version }}",
                        variables: [
                            "version",
                        ],
                    },
                    span: Span {
                        start: 174,
                        end: 174,
                        start_line: 10,
                        start_column: 12,
                        end_line: 10,
                        end_column: 12,
                    },
                },
            ),
        },
        source: [
            Url(
                UrlSource {
                    url: [
                        Template {
                            template: JinjaTemplate {
                                source: "https://github.com/example/project/archive/v${{ version }}.tar.gz",
                                variables: [
                                    "version",
                                ],
                            },
                            span: Span {
                                start: 207,
                                end: 207,
                                start_line: 13,
                                start_column: 10,
                                end_line: 13,
                                end_column: 10,
                            },
                        },
                    ],
                    sha256: Some(
                        Concrete {
                            value: "1234567890abcdef",
                            span: Span {
                                start: 285,
                                end: 285,
                                start_line: 14,
                                start_column: 13,
                                end_line: 14,
                                end_column: 13,
                            },
                        },
                    ),
                    md5: None,
                    file_name: None,
                    patches: ConditionalList(
                        [],
                    ),
                    target_directory: None,
                },
            ),
        ],
        build: Build {
            number: Template {
                template: JinjaTemplate {
                    source: "${{ build_number }}",
                    variables: [
                        "build_number",
                    ],
                },
                span: Span {
                    start: 320,
                    end: 320,
                    start_line: 17,
                    start_column: 11,
                    end_line: 17,
                    end_column: 11,
                },
            },
            string: None,
            script: ConditionalList(
                [],
            ),
            noarch: None,
            python: PythonBuild {
                entry_points: ConditionalList(
                    [],
                ),
                skip_pyc_compilation: ConditionalList(
                    [],
                ),
                use_python_app_entrypoint: false,
                version_independent: false,
                site_packages_path: None,
            },
            skip: ConditionalList(
                [],
            ),
            always_copy_files: ConditionalList(
                [],
            ),
            always_include_files: ConditionalList(
                [],
            ),
            merge_build_and_host_envs: false,
            files: List(
                ConditionalList(
                    [],
                ),
            ),
            dynamic_linking: DynamicLinking {
                rpaths: ConditionalList(
                    [],
                ),
                binary_relocation: Boolean(
                    Concrete {
                        value: true,
                        span: Span {
                            start: 0,
                            end: 0,
                            start_line: 0,
                            start_column: 0,
                            end_line: 0,
                            end_column: 0,
                        },
                    },
                ),
                missing_dso_allowlist: ConditionalList(
                    [],
                ),
                rpath_allowlist: ConditionalList(
                    [],
                ),
                overdepending_behavior: None,
                overlinking_behavior: None,
            },
            variant: VariantKeyUsage {
                use_keys: ConditionalList(
                    [],
                ),
                ignore_keys: ConditionalList(
                    [],
                ),
                down_prioritize_variant: None,
            },
            prefix_detection: PrefixDetection {
                force_file_type: ForceFileType {
                    text: ConditionalList(
                        [],
                    ),
                    binary: ConditionalList(
                        [],
                    ),
                },
                ignore: Boolean(
                    Concrete {
                        value: false,
                        span: Span {
                            start: 0,
                            end: 0,
                            start_line: 0,
                            start_column: 0,
                            end_line: 0,
                            end_column: 0,
                        },
                    },
                ),
                ignore_binary_files: false,
            },
            post_process: [],
        },
        about: About {
            homepage: Some(
                Concrete {
                    value: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "example.com",
                            ),
                        ),
                        port: None,
                        path: "/",
                        query: None,
                        fragment: None,
                    },
                    span: Span {
                        start: 424,
                        end: 424,
                        start_line: 22,
                        start_column: 13,
                        end_line: 22,
                        end_column: 13,
                    },
                },
            ),
            license: Some(
                Concrete {
                    value: License(
                        Apache-2.0,
                    ),
                    span: Span {
                        start: 401,
                        end: 401,
                        start_line: 21,
                        start_column: 12,
                        end_line: 21,
                        end_column: 12,
                    },
                },
            ),
            license_file: ConditionalList(
                [],
            ),
            license_family: None,
            summary: Some(
                Concrete {
                    value: "A complex multi-output project",
                    span: Span {
                        start: 359,
                        end: 359,
                        start_line: 20,
                        start_column: 12,
                        end_line: 20,
                        end_column: 12,
                    },
                },
            ),
            description: None,
            documentation: None,
            repository: None,
        },
        extra: Extra {
            recipe_maintainers: ConditionalList(
                [
                    Value(Concrete { value: "alice", span: Span { start: 480, end: 480, start_line: 26, start_column: 7, end_line: 26, end_column: 7 } }),
                    Value(Concrete { value: "bob", span: Span { start: 492, end: 492, start_line: 27, start_column: 7, end_line: 27, end_column: 7 } }),
                ],
            ),
        },
        outputs: [
            Staging(
                StagingOutput {
                    staging: StagingMetadata {
                        name: Concrete {
                            value: "core-build",
                            span: Span {
                                start: 584,
                                end: 584,
                                start_line: 32,
                                start_column: 13,
                                end_line: 32,
                                end_column: 13,
                            },
                        },
                    },
                    source: [],
                    requirements: StagingRequirements {
                        build: ConditionalList(
                            [
                                Value(Template { template: JinjaTemplate { source: "${{ compiler('c') }}", variables: ["compiler"] }, span: Span { start: 636, end: 636, start_line: 35, start_column: 11, end_line: 35, end_column: 11 } }),
                                Value(Template { template: JinjaTemplate { source: "${{ compiler('cxx') }}", variables: ["compiler"] }, span: Span { start: 667, end: 667, start_line: 36, start_column: 11, end_line: 36, end_column: 11 } }),
                                Value(Concrete { value: "cmake", span: Span { start: 700, end: 700, start_line: 37, start_column: 11, end_line: 37, end_column: 11 } }),
                                Value(Concrete { value: "ninja", span: Span { start: 716, end: 716, start_line: 38, start_column: 11, end_line: 38, end_column: 11 } }),
                            ],
                        ),
                        host: ConditionalList(
                            [
                                Value(Concrete { value: "zlib", span: Span { start: 744, end: 744, start_line: 40, start_column: 11, end_line: 40, end_column: 11 } }),
                                Value(Concrete { value: "openssl", span: Span { start: 759, end: 759, start_line: 41, start_column: 11, end_line: 41, end_column: 11 } }),
                            ],
                        ),
                        ignore_run_exports: Some(
                            IgnoreRunExports {
                                by_name: ConditionalList(
                                    [
                                        Value(Concrete { value: "openssl", span: Span { start: 822, end: 822, start_line: 44, start_column: 13, end_line: 44, end_column: 13 } }),
                                    ],
                                ),
                                from_package: ConditionalList(
                                    [],
                                ),
                            },
                        ),
                    },
                    build: StagingBuild {
                        script: ConditionalList(
                            [
                                Value(Concrete { value: Command("cmake -GNinja -DCMAKE_BUILD_TYPE=Release ."), span: Span { start: 865, end: 865, start_line: 47, start_column: 11, end_line: 47, end_column: 11 } }),
                                Value(Concrete { value: Command("ninja"), span: Span { start: 918, end: 918, start_line: 48, start_column: 11, end_line: 48, end_column: 11 } }),
                            ],
                        ),
                    },
                },
            ),
            Staging(
                StagingOutput {
                    staging: StagingMetadata {
                        name: Concrete {
                            value: "python-build",
                            span: Span {
                                start: 1001,
                                end: 1001,
                                start_line: 52,
                                start_column: 13,
                                end_line: 52,
                                end_column: 13,
                            },
                        },
                    },
                    source: [],
                    requirements: StagingRequirements {
                        build: ConditionalList(
                            [
                                Value(Concrete { value: "python", span: Span { start: 1055, end: 1055, start_line: 55, start_column: 11, end_line: 55, end_column: 11 } }),
                                Value(Concrete { value: "setuptools", span: Span { start: 1072, end: 1072, start_line: 56, start_column: 11, end_line: 56, end_column: 11 } }),
                                Value(Concrete { value: "wheel", span: Span { start: 1093, end: 1093, start_line: 57, start_column: 11, end_line: 57, end_column: 11 } }),
                            ],
                        ),
                        host: ConditionalList(
                            [
                                Value(Concrete { value: "python", span: Span { start: 1121, end: 1121, start_line: 59, start_column: 11, end_line: 59, end_column: 11 } }),
                                Value(Concrete { value: "pybind11", span: Span { start: 1138, end: 1138, start_line: 60, start_column: 11, end_line: 60, end_column: 11 } }),
                            ],
                        ),
                        ignore_run_exports: None,
                    },
                    build: StagingBuild {
                        script: ConditionalList(
                            [
                                Value(Concrete { value: Command("python setup.py build_ext"), span: Span { start: 1182, end: 1182, start_line: 63, start_column: 11, end_line: 63, end_column: 11 } }),
                            ],
                        ),
                    },
                },
            ),
            Package(
                PackageOutput {
                    package: PackageMetadata {
                        name: Concrete {
                            value: PackageName(
                                PackageName {
                                    normalized: None,
                                    source: "libcomplex",
                                },
                            ),
                            span: Span {
                                start: 1269,
                                end: 1269,
                                start_line: 67,
                                start_column: 13,
                                end_line: 67,
                                end_column: 13,
                            },
                        },
                        version: Some(
                            Template {
                                template: JinjaTemplate {
                                    source: "${{ version }}",
                                    variables: [
                                        "version",
                                    ],
                                },
                                span: Span {
                                    start: 1295,
                                    end: 1295,
                                    start_line: 68,
                                    start_column: 16,
                                    end_line: 68,
                                    end_column: 16,
                                },
                            },
                        ),
                    },
                    inherit: CacheWithOptions(
                        CacheInherit {
                            from: Concrete {
                                value: "core-build",
                                span: Span {
                                    start: 1335,
                                    end: 1335,
                                    start_line: 70,
                                    start_column: 13,
                                    end_line: 70,
                                    end_column: 13,
                                },
                            },
                            run_exports: true,
                        },
                    ),
                    source: [],
                    requirements: Requirements {
                        build: ConditionalList(
                            [],
                        ),
                        host: ConditionalList(
                            [],
                        ),
                        run: ConditionalList(
                            [
                                Value(Concrete { value: Parsed(MatchSpec { name: Some(PackageName { normalized: None, source: "zlib" }), version: None, build: None, build_number: None, file_name: None, extras: None, channel: None, subdir: None, namespace: None, md5: None, sha256: None, url: None, license: None }), span: Span { start: 1409, end: 1409, start_line: 74, start_column: 11, end_line: 74, end_column: 11 } }),
                            ],
                        ),
                        run_constraints: ConditionalList(
                            [],
                        ),
                        run_exports: RunExports {
                            noarch: ConditionalList(
                                [],
                            ),
                            strong: ConditionalList(
                                [],
                            ),
                            strong_constraints: ConditionalList(
                                [],
                            ),
                            weak: ConditionalList(
                                [],
                            ),
                            weak_constraints: ConditionalList(
                                [],
                            ),
                        },
                        ignore_run_exports: IgnoreRunExports {
                            by_name: ConditionalList(
                                [],
                            ),
                            from_package: ConditionalList(
                                [],
                            ),
                        },
                    },
                    build: Build {
                        number: Concrete {
                            value: 0,
                            span: Span {
                                start: 0,
                                end: 0,
                                start_line: 0,
                                start_column: 0,
                                end_line: 0,
                                end_column: 0,
                            },
                        },
                        string: None,
                        script: ConditionalList(
                            [],
                        ),
                        noarch: None,
                        python: PythonBuild {
                            entry_points: ConditionalList(
                                [],
                            ),
                            skip_pyc_compilation: ConditionalList(
                                [],
                            ),
                            use_python_app_entrypoint: false,
                            version_independent: false,
                            site_packages_path: None,
                        },
                        skip: ConditionalList(
                            [],
                        ),
                        always_copy_files: ConditionalList(
                            [],
                        ),
                        always_include_files: ConditionalList(
                            [],
                        ),
                        merge_build_and_host_envs: false,
                        files: List(
                            ConditionalList(
                                [],
                            ),
                        ),
                        dynamic_linking: DynamicLinking {
                            rpaths: ConditionalList(
                                [],
                            ),
                            binary_relocation: Boolean(
                                Concrete {
                                    value: true,
                                    span: Span {
                                        start: 0,
                                        end: 0,
                                        start_line: 0,
                                        start_column: 0,
                                        end_line: 0,
                                        end_column: 0,
                                    },
                                },
                            ),
                            missing_dso_allowlist: ConditionalList(
                                [],
                            ),
                            rpath_allowlist: ConditionalList(
                                [],
                            ),
                            overdepending_behavior: None,
                            overlinking_behavior: None,
                        },
                        variant: VariantKeyUsage {
                            use_keys: ConditionalList(
                                [],
                            ),
                            ignore_keys: ConditionalList(
                                [],
                            ),
                            down_prioritize_variant: None,
                        },
                        prefix_detection: PrefixDetection {
                            force_file_type: ForceFileType {
                                text: ConditionalList(
                                    [],
                                ),
                                binary: ConditionalList(
                                    [],
                                ),
                            },
                            ignore: Boolean(
                                Concrete {
                                    value: false,
                                    span: Span {
                                        start: 0,
                                        end: 0,
                                        start_line: 0,
                                        start_column: 0,
                                        end_line: 0,
                                        end_column: 0,
                                    },
                                },
                            ),
                            ignore_binary_files: false,
                        },
                        post_process: [],
                    },
                    about: About {
                        homepage: None,
                        license: Some(
                            Concrete {
                                value: License(
                                    Apache-2.0,
                                ),
                                span: Span {
                                    start: 1484,
                                    end: 1484,
                                    start_line: 77,
                                    start_column: 16,
                                    end_line: 77,
                                    end_column: 16,
                                },
                            },
                        ),
                        license_file: ConditionalList(
                            [],
                        ),
                        license_family: None,
                        summary: Some(
                            Concrete {
                                value: "Complex project core library",
                                span: Span {
                                    start: 1440,
                                    end: 1440,
                                    start_line: 76,
                                    start_column: 16,
                                    end_line: 76,
                                    end_column: 16,
                                },
                            },
                        ),
                        description: None,
                        documentation: None,
                        repository: None,
                    },
                    tests: [
                        Commands(
                            CommandsTest {
                                script: ConditionalList(
                                    [
                                        Value(Concrete { value: Command("test -f $PREFIX/lib/libcomplex.so"), span: Span { start: 1534, end: 1534, start_line: 80, start_column: 13, end_line: 80, end_column: 13 } }),
                                    ],
                                ),
                                requirements: None,
                                files: None,
                            },
                        ),
                    ],
                },
            ),
            Package(
                PackageOutput {
                    package: PackageMetadata {
                        name: Concrete {
                            value: PackageName(
                                PackageName {
                                    normalized: None,
                                    source: "py-complex",
                                },
                            ),
                            span: Span {
                                start: 1632,
                                end: 1632,
                                start_line: 84,
                                start_column: 13,
                                end_line: 84,
                                end_column: 13,
                            },
                        },
                        version: Some(
                            Template {
                                template: JinjaTemplate {
                                    source: "${{ version }}",
                                    variables: [
                                        "version",
                                    ],
                                },
                                span: Span {
                                    start: 1658,
                                    end: 1658,
                                    start_line: 85,
                                    start_column: 16,
                                    end_line: 85,
                                    end_column: 16,
                                },
                            },
                        ),
                    },
                    inherit: CacheName(
                        Concrete {
                            value: "python-build",
                            span: Span {
                                start: 1686,
                                end: 1686,
                                start_line: 86,
                                start_column: 14,
                                end_line: 86,
                                end_column: 14,
                            },
                        },
                    ),
                    source: [],
                    requirements: Requirements {
                        build: ConditionalList(
                            [],
                        ),
                        host: ConditionalList(
                            [],
                        ),
                        run: ConditionalList(
                            [
                                Value(Concrete { value: Parsed(MatchSpec { name: Some(PackageName { normalized: None, source: "python" }), version: None, build: None, build_number: None, file_name: None, extras: None, channel: None, subdir: None, namespace: None, md5: None, sha256: None, url: None, license: None }), span: Span { start: 1738, end: 1738, start_line: 89, start_column: 11, end_line: 89, end_column: 11 } }),
                                Value(Template { template: JinjaTemplate { source: "libcomplex ${{ version }}", variables: ["version"] }, span: Span { start: 1755, end: 1755, start_line: 90, start_column: 11, end_line: 90, end_column: 11 } }),
                            ],
                        ),
                        run_constraints: ConditionalList(
                            [],
                        ),
                        run_exports: RunExports {
                            noarch: ConditionalList(
                                [],
                            ),
                            strong: ConditionalList(
                                [],
                            ),
                            strong_constraints: ConditionalList(
                                [],
                            ),
                            weak: ConditionalList(
                                [],
                            ),
                            weak_constraints: ConditionalList(
                                [],
                            ),
                        },
                        ignore_run_exports: IgnoreRunExports {
                            by_name: ConditionalList(
                                [],
                            ),
                            from_package: ConditionalList(
                                [],
                            ),
                        },
                    },
                    build: Build {
                        number: Concrete {
                            value: 0,
                            span: Span {
                                start: 0,
                                end: 0,
                                start_line: 0,
                                start_column: 0,
                                end_line: 0,
                                end_column: 0,
                            },
                        },
                        string: None,
                        script: ConditionalList(
                            [],
                        ),
                        noarch: None,
                        python: PythonBuild {
                            entry_points: ConditionalList(
                                [],
                            ),
                            skip_pyc_compilation: ConditionalList(
                                [],
                            ),
                            use_python_app_entrypoint: false,
                            version_independent: false,
                            site_packages_path: None,
                        },
                        skip: ConditionalList(
                            [],
                        ),
                        always_copy_files: ConditionalList(
                            [],
                        ),
                        always_include_files: ConditionalList(
                            [],
                        ),
                        merge_build_and_host_envs: false,
                        files: List(
                            ConditionalList(
                                [],
                            ),
                        ),
                        dynamic_linking: DynamicLinking {
                            rpaths: ConditionalList(
                                [],
                            ),
                            binary_relocation: Boolean(
                                Concrete {
                                    value: true,
                                    span: Span {
                                        start: 0,
                                        end: 0,
                                        start_line: 0,
                                        start_column: 0,
                                        end_line: 0,
                                        end_column: 0,
                                    },
                                },
                            ),
                            missing_dso_allowlist: ConditionalList(
                                [],
                            ),
                            rpath_allowlist: ConditionalList(
                                [],
                            ),
                            overdepending_behavior: None,
                            overlinking_behavior: None,
                        },
                        variant: VariantKeyUsage {
                            use_keys: ConditionalList(
                                [],
                            ),
                            ignore_keys: ConditionalList(
                                [],
                            ),
                            down_prioritize_variant: None,
                        },
                        prefix_detection: PrefixDetection {
                            force_file_type: ForceFileType {
                                text: ConditionalList(
                                    [],
                                ),
                                binary: ConditionalList(
                                    [],
                                ),
                            },
                            ignore: Boolean(
                                Concrete {
                                    value: false,
                                    span: Span {
                                        start: 0,
                                        end: 0,
                                        start_line: 0,
                                        start_column: 0,
                                        end_line: 0,
                                        end_column: 0,
                                    },
                                },
                            ),
                            ignore_binary_files: false,
                        },
                        post_process: [],
                    },
                    about: About {
                        homepage: None,
                        license: Some(
                            Concrete {
                                value: License(
                                    Apache-2.0,
                                ),
                                span: Span {
                                    start: 1858,
                                    end: 1858,
                                    start_line: 93,
                                    start_column: 16,
                                    end_line: 93,
                                    end_column: 16,
                                },
                            },
                        ),
                        license_file: ConditionalList(
                            [],
                        ),
                        license_family: None,
                        summary: Some(
                            Concrete {
                                value: "Python bindings for complex project",
                                span: Span {
                                    start: 1807,
                                    end: 1807,
                                    start_line: 92,
                                    start_column: 16,
                                    end_line: 92,
                                    end_column: 16,
                                },
                            },
                        ),
                        description: Some(
                            Concrete {
                                value: "This package provides Python bindings for the complex project.\nIt allows you to use complex project functionality from Python.\n",
                                span: Span {
                                    start: 1898,
                                    end: 1898,
                                    start_line: 95,
                                    start_column: 9,
                                    end_line: 95,
                                    end_column: 9,
                                },
                            },
                        ),
                        documentation: None,
                        repository: None,
                    },
                    tests: [
                        Python {
                            python: PythonTest {
                                imports: ConditionalList(
                                    [
                                        Value(Concrete { value: "complex", span: Span { start: 2093, end: 2093, start_line: 100, start_column: 15, end_line: 100, end_column: 15 } }),
                                        Value(Concrete { value: "complex.core", span: Span { start: 2115, end: 2115, start_line: 101, start_column: 15, end_line: 101, end_column: 15 } }),
                                    ],
                                ),
                                pip_check: None,
                                python_version: None,
                            },
                        },
                    ],
                },
            ),
            Package(
                PackageOutput {
                    package: PackageMetadata {
                        name: Concrete {
                            value: PackageName(
                                PackageName {
                                    normalized: None,
                                    source: "libcomplex-dev",
                                },
                            ),
                            span: Span {
                                start: 2234,
                                end: 2234,
                                start_line: 105,
                                start_column: 13,
                                end_line: 105,
                                end_column: 13,
                            },
                        },
                        version: Some(
                            Template {
                                template: JinjaTemplate {
                                    source: "${{ version }}",
                                    variables: [
                                        "version",
                                    ],
                                },
                                span: Span {
                                    start: 2264,
                                    end: 2264,
                                    start_line: 106,
                                    start_column: 16,
                                    end_line: 106,
                                    end_column: 16,
                                },
                            },
                        ),
                    },
                    inherit: TopLevel,
                    source: [],
                    requirements: Requirements {
                        build: ConditionalList(
                            [],
                        ),
                        host: ConditionalList(
                            [],
                        ),
                        run: ConditionalList(
                            [
                                Value(Template { template: JinjaTemplate { source: "libcomplex ${{ version }}", variables: ["version"] }, span: Span { start: 2336, end: 2336, start_line: 110, start_column: 11, end_line: 110, end_column: 11 } }),
                            ],
                        ),
                        run_constraints: ConditionalList(
                            [],
                        ),
                        run_exports: RunExports {
                            noarch: ConditionalList(
                                [],
                            ),
                            strong: ConditionalList(
                                [],
                            ),
                            strong_constraints: ConditionalList(
                                [],
                            ),
                            weak: ConditionalList(
                                [],
                            ),
                            weak_constraints: ConditionalList(
                                [],
                            ),
                        },
                        ignore_run_exports: IgnoreRunExports {
                            by_name: ConditionalList(
                                [],
                            ),
                            from_package: ConditionalList(
                                [],
                            ),
                        },
                    },
                    build: Build {
                        number: Concrete {
                            value: 0,
                            span: Span {
                                start: 0,
                                end: 0,
                                start_line: 0,
                                start_column: 0,
                                end_line: 0,
                                end_column: 0,
                            },
                        },
                        string: None,
                        script: ConditionalList(
                            [],
                        ),
                        noarch: None,
                        python: PythonBuild {
                            entry_points: ConditionalList(
                                [],
                            ),
                            skip_pyc_compilation: ConditionalList(
                                [],
                            ),
                            use_python_app_entrypoint: false,
                            version_independent: false,
                            site_packages_path: None,
                        },
                        skip: ConditionalList(
                            [],
                        ),
                        always_copy_files: ConditionalList(
                            [],
                        ),
                        always_include_files: ConditionalList(
                            [],
                        ),
                        merge_build_and_host_envs: false,
                        files: List(
                            ConditionalList(
                                [],
                            ),
                        ),
                        dynamic_linking: DynamicLinking {
                            rpaths: ConditionalList(
                                [],
                            ),
                            binary_relocation: Boolean(
                                Concrete {
                                    value: true,
                                    span: Span {
                                        start: 0,
                                        end: 0,
                                        start_line: 0,
                                        start_column: 0,
                                        end_line: 0,
                                        end_column: 0,
                                    },
                                },
                            ),
                            missing_dso_allowlist: ConditionalList(
                                [],
                            ),
                            rpath_allowlist: ConditionalList(
                                [],
                            ),
                            overdepending_behavior: None,
                            overlinking_behavior: None,
                        },
                        variant: VariantKeyUsage {
                            use_keys: ConditionalList(
                                [],
                            ),
                            ignore_keys: ConditionalList(
                                [],
                            ),
                            down_prioritize_variant: None,
                        },
                        prefix_detection: PrefixDetection {
                            force_file_type: ForceFileType {
                                text: ConditionalList(
                                    [],
                                ),
                                binary: ConditionalList(
                                    [],
                                ),
                            },
                            ignore: Boolean(
                                Concrete {
                                    value: false,
                                    span: Span {
                                        start: 0,
                                        end: 0,
                                        start_line: 0,
                                        start_column: 0,
                                        end_line: 0,
                                        end_column: 0,
                                    },
                                },
                            ),
                            ignore_binary_files: false,
                        },
                        post_process: [],
                    },
                    about: About {
                        homepage: None,
                        license: Some(
                            Concrete {
                                value: License(
                                    Apache-2.0,
                                ),
                                span: Span {
                                    start: 2443,
                                    end: 2443,
                                    start_line: 113,
                                    start_column: 16,
                                    end_line: 113,
                                    end_column: 16,
                                },
                            },
                        ),
                        license_file: ConditionalList(
                            [],
                        ),
                        license_family: None,
                        summary: Some(
                            Concrete {
                                value: "Development headers for complex project",
                                span: Span {
                                    start: 2388,
                                    end: 2388,
                                    start_line: 112,
                                    start_column: 16,
                                    end_line: 112,
                                    end_column: 16,
                                },
                            },
                        ),
                        description: None,
                        documentation: None,
                        repository: None,
                    },
                    tests: [],
                },
            ),
        ],
    },
)
