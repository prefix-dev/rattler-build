---
source: src/patch/parse.rs
expression: patches
input_file: src/patch/test-data/0001-cross.patch.fail
---
Ok(
    [
        Patch {
            original: Some(
                Filename(
                    "a/Makefile",
                ),
            ),
            modified: Some(
                Filename(
                    "b/Makefile",
                ),
            ),
            hunks: [
                Hunk {
                    old_range: HunkRange {
                        start: 15,
                        len: 16,
                    },
                    new_range: HunkRange {
                        start: 15,
                        len: 16,
                    },
                    function_context: None,
                    lines: [
                        Context(
                            "SHELL=/bin/sh\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "# To assist in cross-compiling\n",
                        ),
                        Delete(
                            "CC=gcc\n",
                        ),
                        Delete(
                            "AR=ar\n",
                        ),
                        Delete(
                            "RANLIB=ranlib\n",
                        ),
                        Delete(
                            "LDFLAGS=\n",
                        ),
                        Insert(
                            "CC?=gcc\n",
                        ),
                        Insert(
                            "AR?=ar\n",
                        ),
                        Insert(
                            "RANLIB?=ranlib\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "BIGFILES=-D_FILE_OFFSET_BITS=64\n",
                        ),
                        Delete(
                            "CFLAGS=-Wall -Winline -O2 -g $(BIGFILES)\n",
                        ),
                        Insert(
                            "CFLAGS?=-Wall -Winline -O2 -g\n",
                        ),
                        Insert(
                            "CFLAGS=$(CFLAGS) $(BIGFILES)\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "# Where you want it installed when you do 'make install'\n",
                        ),
                        Delete(
                            "PREFIX=/usr/local\n",
                        ),
                        Insert(
                            "PREFIX=$PREFIX\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "OBJS= blocksort.o  \\\n",
                        ),
                    ],
                },
            ],
        },
        Patch {
            original: Some(
                Filename(
                    "a/Makefile-libbz2_so",
                ),
            ),
            modified: Some(
                Filename(
                    "b/Makefile-libbz2_so",
                ),
            ),
            hunks: [
                Hunk {
                    old_range: HunkRange {
                        start: 22,
                        len: 9,
                    },
                    new_range: HunkRange {
                        start: 22,
                        len: 18,
                    },
                    function_context: None,
                    lines: [
                        Context(
                            "\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "SHELL=/bin/sh\n",
                        ),
                        Delete(
                            "CC=gcc\n",
                        ),
                        Insert(
                            "\n",
                        ),
                        Insert(
                            "# To assist in cross-compiling\n",
                        ),
                        Insert(
                            "CC?=gcc\n",
                        ),
                        Insert(
                            "AR?=ar\n",
                        ),
                        Insert(
                            "RANLIB?=ranlib\n",
                        ),
                        Insert(
                            "\n",
                        ),
                        Context(
                            "BIGFILES=-D_FILE_OFFSET_BITS=64\n",
                        ),
                        Delete(
                            "CFLAGS=-fpic -fPIC -Wall -Winline -O2 -g $(BIGFILES)\n",
                        ),
                        Insert(
                            "CFLAGS?=-Wall -Winline -O2 -g\n",
                        ),
                        Insert(
                            "CFLAGS=$(CFLAGS) $(BIGFILES)\n",
                        ),
                        Insert(
                            "\n",
                        ),
                        Insert(
                            "# Where you want it installed when you do 'make install'\n",
                        ),
                        Insert(
                            "PREFIX=$PREFIX\n",
                        ),
                        Context(
                            "\n",
                        ),
                        Context(
                            "OBJS= blocksort.o  \\\n",
                        ),
                        Context(
                            "      huffman.o    \\\n",
                        ),
                    ],
                },
            ],
        },
    ],
)
